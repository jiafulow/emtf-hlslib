import os


# Input filenames
sources = [
  'common.h',
  'copy_kernels.h',
  'duperemoval.h',
  'fullyconnect.h',
  'layer_constants.h',
  'layer_helpers.h',
  'model_configs.h',
  'nnet_kernels.h',
  'nnet_weights.h',
  'pattern_bank.h',
  'pooling.h',
  #'print_macros.h',
  'sort_kernels.h',
  'traits.h',
  'trkbuilding.h',
  'types.h',
  'zonemerging.h',
  'zonesorting.h',
  'zoning.h',
]

src_dir = '../../firmware/emtf_hlslib/'

dst_dir = 'emtf_hlslib/'

header = [
  '// This file is automatically generated. Please do not edit by hand.',
  '',
]

footer = [
  '',
]


# Read lines from file, ignoring pragmas and loop labels
def read_fn(fname):
  lines = []

  keep = True

  with open(src_dir + fname) as f:
    for line in f:
      line = line.rstrip()

      if '// hls-pragmas begin' in line:
        keep = False
      elif 'LOOP_' in line and line.endswith(':'):
        keep = False

      if keep:
        lines.append(line)

      if '// hls-pragmas end' in line:
        keep = True
      elif 'LOOP_' in line and line.endswith(':'):
        keep = True
  return lines


# Write to file
def write_fn(fname, lines):
  body = lines
  fulltext = header + body + footer
  fulltext = '\n'.join(fulltext)

  with open(dst_dir + fname, 'w') as f:
    f.write(fulltext)


# Main
if __name__ == '__main__':
  assert os.path.exists(src_dir)
  os.makedirs(dst_dir, exist_ok=True)

  for fname in sources:
    lines = read_fn(fname)
    write_fn(fname, lines)
